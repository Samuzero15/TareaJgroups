/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jgroups_again;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import org.jgroups.JChannel;
import org.jgroups.Message;
import org.jgroups.ReceiverAdapter;
import org.jgroups.View; 
import org.jgroups.util.Util;

import javax.swing.JOptionPane;
import javax.swing.ListModel;
import org.jgroups.Address;
import org.jgroups.Receiver;

/**
 *
 * @author lezama
 */
public class ChatRoom extends javax.swing.JFrame implements Receiver{

    /**
     * Creates new form ChatRoom
     */
    JChannel canal;
    String user_name;
    final List<String> state=new LinkedList<String>();
    Address destinatario_privado = null;
    HashMap<Address, ChatPrivado> chats_privados = new HashMap<>();
    View vista;
    ModoUsuario modo;
    boolean activaPizarra = false;
    PizarraAlumno pa;
    PizarraProfesor pp;
    
    public ChatRoom() {
        String name = JOptionPane.showInputDialog("Nombre de usuario");
        //System.out.println("Entras como <" + name + ">");
        user_name = name;
        String[] ops = {"Estudiante", "Profesor"};
        int mod = JOptionPane.showOptionDialog(null, "¿En que modo quiere entrar al grupo?",
                "Seleccione el modo de usuario",
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, ops, ops[0]);
        String letraModo = "";
        switch(mod){
            case 0: modo = ModoUsuario.ESTUDIANTE; letraModo="E"; break;
            case 1: modo = ModoUsuario.PROFESOR; letraModo="P"; break;
        }
        
        initComponents();
        btnTogglePizarra.setVisible(!modo.equals(ModoUsuario.ESTUDIANTE));
        
        txtMensaje.setEnabled(false);
        listaUsuarios.setEnabled(false);
        
        try{
            //System.out.println("Conectando...");
            Random r = new Random();
            canal=new JChannel();
            canal.setReceiver(this);
            canal.setName(user_name + "-" + letraModo + (r.nextInt(100000) + 1));
            canal.connect("Cluster");
            canal.getState(null, 10000);
            
        }catch (Exception e){
            e.printStackTrace();
            //System.out.println("Saliste del chat");
            System.exit(0);
        }
        txtMensaje.setEnabled(true);
        listaUsuarios.setEnabled(true);
        this.setTitle("[Grupo: " + canal.getClusterName() + "] <" + canal.getAddress() + "> ("+user_name+")");
        
        
        
        //System.out.println("Inicializacion completada.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panel_chat_general = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPanelMensajes = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        txtMensaje = new javax.swing.JTextField();
        btn_enviar = new javax.swing.JButton();
        panel_miembros_grupo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaUsuarios = new javax.swing.JList<>();
        btnTogglePizarra = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        panel_chat_general.setLayout(new java.awt.GridBagLayout());

        txtPanelMensajes.setEditable(false);
        jScrollPane1.setViewportView(txtPanelMensajes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 210;
        gridBagConstraints.ipady = 223;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 10);
        panel_chat_general.add(jScrollPane1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        txtMensaje.setToolTipText("Escribe un mensaje");
        txtMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMensajeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel1.add(txtMensaje, gridBagConstraints);

        btn_enviar.setText("Enviar");
        btn_enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enviarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(btn_enviar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 46;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        panel_chat_general.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(panel_chat_general, gridBagConstraints);

        panel_miembros_grupo.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Miembros del grupo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        panel_miembros_grupo.add(jLabel2, gridBagConstraints);

        listaUsuarios.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listaUsuarios);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 76;
        gridBagConstraints.ipady = 107;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        panel_miembros_grupo.add(jScrollPane2, gridBagConstraints);

        btnTogglePizarra.setText("Habilitar Pizarrón");
        btnTogglePizarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTogglePizarraActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        panel_miembros_grupo.add(btnTogglePizarra, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(panel_miembros_grupo, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMensajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMensajeActionPerformed

    private void btn_enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enviarActionPerformed
        try {
            if(txtMensaje.getText().length() == 0)return;
            String line="<" + user_name + ">: " + txtMensaje.getText();
            Message msg = null;
            if(destinatario_privado != null){
                msg = new Message(destinatario_privado, canal.getAddress(), new Paquete(TipoMensaje.TEXTO, line));
                destinatario_privado = null;
                btn_enviar.setText("Enviar");
                canal.send(msg);
            }else{
                msg = new Message(null, null, new Paquete(TipoMensaje.TEXTO, line));
                canal.send(msg);
            } 
                
            txtMensaje.setText("");
        }catch(Exception e) {
            System.out.println("oof.");
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btn_enviarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        canal.close();
        System.out.println("Saliste del chat");
        System.exit(0);
    }//GEN-LAST:event_formWindowClosed

    private void listaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaUsuariosMouseClicked
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {

            // Double-click detected
            int index = list.locationToIndex(evt.getPoint());
            //System.out.println("2x Click! para index: "+index);
            for(Address a : vista.getMembers()){
                if(a.toString() == list.getModel().getElementAt(index)){
                    //System.out.println("Hey, voy a hablar con: " + a);
                    //new ChatPrivado(canal, vista.getCreator(),a).setVisible(true);
                    destinatario_privado = a;
                    btn_enviar.setText("Enviar a " + a);
                }
            }
        } else if (evt.getClickCount() == 3) {

            // Triple-click detected
            int index = list.locationToIndex(evt.getPoint());
            //System.out.println("2x Click! para index: "+index);
        }
    }//GEN-LAST:event_listaUsuariosMouseClicked

    private void btnTogglePizarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTogglePizarraActionPerformed
        this.cierraPizarras();
    }//GEN-LAST:event_btnTogglePizarraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTogglePizarra;
    private javax.swing.JButton btn_enviar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaUsuarios;
    private javax.swing.JPanel panel_chat_general;
    private javax.swing.JPanel panel_miembros_grupo;
    private javax.swing.JTextField txtMensaje;
    private javax.swing.JTextPane txtPanelMensajes;
    // End of variables declaration//GEN-END:variables

    @Override
    public void receive(Message msg) {
        Paquete p = (Paquete) msg.getObject();
        
        switch(p.getTipo()){
            case TEXTO:
                String line= "<" + msg.getSrc() + ">: " + p.getValor() + "\n";
                if(msg.getDest() == null){
                    txtPanelMensajes.setText(txtPanelMensajes.getText() + line);
                    synchronized(state) {
                        state.add(line);
                    }
                }else {
                    boolean encontrado = false;
                    for(Address a : chats_privados.keySet()){
                        if(a.equals(msg.getDest())){
                            //System.out.println("Te encontre jueputa!");
                            chats_privados.get(a).escribir(line);
                            encontrado = true;
                            break;
                        }
                    }
                    if(!encontrado){
                        //System.out.println("Okay, abriré una nueva ventana de mensaje xd!");
                        ChatPrivado c = new ChatPrivado(this, msg.getSrc(), msg.getDest());
                        c.escribir(line);
                        chats_privados.put(msg.getDest(), c);
                    }
                }
            break;
            
            case DIBUJO:
                String strDibujo = (String) p.getValor();
                
                if(modo == ModoUsuario.ESTUDIANTE){
                    System.out.println("Prueba");
                    if(pa != null) 
                        pa.copiarAPizarra(strDibujo);
                }
            break;
            
            case PIZARRA:
                if((boolean) p.getValor() == true){
                    if(modo == ModoUsuario.PROFESOR){
                        pp = new PizarraProfesor(this);
                        pp.setVisible(true);
                        pp.setTitle("Pizarra (Profesor)");
                    } 
                    else{
                        pa = new PizarraAlumno();
                        pa.setVisible(true);
                        pa.setTitle("Pizarra (Alumno)");
                    }
                }
                else {
                    if(modo == ModoUsuario.PROFESOR){
                        pp.dispose();
                        pp = null;
                    } 
                    else{
                        pa.dispose();
                        pa = null;
                    }
                }
                activaPizarra = (boolean) p.getValor();
                btnTogglePizarra.setText((boolean) p.getValor() ? "Deshabilitar Pizarra" : "Habilitar Pizarra");
            break;
        }
    }

    @Override
    public void getState(OutputStream out) throws Exception {
        synchronized(state) {
            Util.objectToStream(state, new DataOutputStream(out));
        }
    }

    @Override
    public void setState(InputStream in) throws Exception {
        List<String> list=(List<String>)Util.objectFromStream(new DataInputStream(in));
        synchronized(state) {
            state.clear();
            state.addAll(list);
        }
        System.out.println("Estado recibido, (" + list.size() + " mensajes en el historial del chat):");
        for(String str: list) {
            txtPanelMensajes.setText(txtPanelMensajes.getText() + str);
        };
    }

    @Override
    public void viewAccepted(View view) {
        System.out.println("** view: " + view); //To change body of generated methods, choose Tools | Templates.
        DefaultListModel lista = new DefaultListModel();
        for(Address a : view.getMembers()){
            lista.addElement(a.toString());
            
            
        }
        listaUsuarios.setModel(lista);
        vista = view;
    }

    public void suspect(Address adrs) {}
    public void block() {System.out.println("Blockin.");}
    public void unblock() {System.out.println("unblockin.");}

    public String getUsername(){
        return this.user_name;
    }

    JChannel getCanal() {
        return this.canal;
    }

    void limpia(Address para_quien) {
        chats_privados.remove(para_quien);
    }

    public ModoUsuario getModoUsuario() {
        return this.modo;
    }

    public void cierraPizarras() {
        try {
            Paquete p = new Paquete(TipoMensaje.PIZARRA, !activaPizarra);
            Message msg = new Message(null, null, p);
            canal.send(msg);
        } catch (Exception e) {
            System.out.println("oof.");
            e.printStackTrace();
        }
    }
}
